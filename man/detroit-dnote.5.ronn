detroit-dnote(5) - extract developers notes from ruby source code
=================================================================

## DESCRIPTION

The DNote plug-in for Detroit utilizes the DNote command line tool
to extract notes from source code and construct nicely formatted
documentation out of it.


## OPTIONS

The following options can be used in the Detroit toolchain file
for defining a DNote tool instance.

  * `labels` - List of labels to document. The default list includes
     `TODO`, `FIXME`, `OPTIMIZE`, and `DEPRECATE`.

  * `files` - File paths to search.
  
  * `exclude` - Exclude paths.

  * `ignore` - Ignore paths based on any part of pathname.

  * `title` -  Title to use if template can use it.

  * `lines` - Number of context lines to display.

  * `output` - Output is either a file name with a recognized extension,
    a list of such file names, or a hash mapping file name to file type.
    Recognized extensions include `xml`, `html` and `rdoc` among others.


## EXAMPLES

The simplest entry needs only an output file.

    dnote:
      output: NOTES.rdoc

To produce multiple formats use a list.

    dnote:
      output:
        - NOTES.rdoc
        - site/notes.html

If the extension is atypical use a mapping.

     dnote:
       output:
         NOTES: markdown
         site/notes.htm: html

A fuller example might look something like this.

     dnote:
       labels: [TODO, THINK, FIX, OPTIMIZE]
       files: [lib, test]
       exclude:
         - lib/foo/templates
       ignore: [.yml]
       output: log/NOTES.rdoc
       lines: 5


## RESOURCES

For more information:

  * [API Documentation](http://rubydoc.info/gems/detroit-dnote)

  * [Development Site](http://github.com/detroit/detroit-dnote)


## COPYRIGHT

Copyright (c) 2010 Rubyworks

Detroit DNote is distributable in accordance with the GPLv3 license.


## SEE ALSO

detroit(1), dnote(1)
